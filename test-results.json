{"numTotalTestSuites":87,"numPassedTestSuites":87,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":98,"numPassedTests":98,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1760708441079,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Atom operations"],"fullName":"Atom operations reset! works","status":"passed","title":"reset! works","duration":1.1429170000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with assoc works","status":"passed","title":"swap! with assoc works","duration":0.3073749999999791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with assoc-in works","status":"passed","title":"swap! with assoc-in works","duration":0.2578749999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with update works","status":"passed","title":"swap! with update works","duration":0.21170799999998735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with update-in works","status":"passed","title":"swap! with update-in works","duration":0.2531669999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with conj works","status":"passed","title":"swap! with conj works","duration":0.12999999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with dissoc works","status":"passed","title":"swap! with dissoc works","duration":0.13541699999998968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with update-in and conj on nil","status":"passed","title":"swap! with update-in and conj on nil","duration":0.10729200000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["Atom operations"],"fullName":"Atom operations swap! with update-in and assoc on nil","status":"passed","title":"swap! with update-in and assoc on nil","duration":0.053375000000016826,"failureMessages":[],"meta":{}}],"startTime":1760708442099,"endTime":1760708442102.0535,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/atom_operations.test.mjs"},{"assertionResults":[{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle class attribute with nil/null values correctly","status":"passed","title":"should handle class attribute with nil/null values correctly","duration":10.112250000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle title attribute with nil/null values correctly","status":"passed","title":"should handle title attribute with nil/null values correctly","duration":6.792583000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle data attributes with nil/null values correctly","status":"passed","title":"should handle data attributes with nil/null values correctly","duration":8.695125000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle boolean attributes (disabled, checked) correctly","status":"passed","title":"should handle boolean attributes (disabled, checked) correctly","duration":8.747167000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle selected attribute correctly","status":"passed","title":"should handle selected attribute correctly","duration":5.053999999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Attribute Handling"],"fullName":"Attribute Handling should handle style attributes with nil/null values correctly","status":"passed","title":"should handle style attributes with nil/null values correctly","duration":6.680833000000007,"failureMessages":[],"meta":{}}],"startTime":1760708441438,"endTime":1760708441483.681,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/attribute_handling.test.mjs"},{"assertionResults":[{"ancestorTitles":["Simple Component"],"fullName":"Simple Component should render correctly","status":"passed","title":"should render correctly","duration":3.7059580000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Parent"],"fullName":"Simple Parent should render with a child component","status":"passed","title":"should render with a child component","duration":1.1430839999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hello Component"],"fullName":"Hello Component should say hello","status":"passed","title":"should say hello","duration":0.24720800000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Lister"],"fullName":"Lister should render a list","status":"passed","title":"should render a list","duration":0.4597079999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle a vector of strings","status":"passed","title":"should handle a vector of strings","duration":0.24237499999998136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle a vector of keywords","status":"passed","title":"should handle a vector of keywords","duration":0.2534999999999741,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle a vector of mixed strings and keywords","status":"passed","title":"should handle a vector of mixed strings and keywords","duration":0.17616700000002083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle a vector with nil values","status":"passed","title":"should handle a vector with nil values","duration":0.12783300000000963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle an empty vector","status":"passed","title":"should handle an empty vector","duration":0.28183400000000347,"failureMessages":[],"meta":{}},{"ancestorTitles":["Class attribute handling"],"fullName":"Class attribute handling should handle a vector with only nil values","status":"passed","title":"should handle a vector with only nil values","duration":0.30466599999999744,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should handle a single class decorator","status":"passed","title":"should handle a single class decorator","duration":0.13612499999999272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should handle multiple class decorators","status":"passed","title":"should handle multiple class decorators","duration":0.10679199999998445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should handle an id decorator","status":"passed","title":"should handle an id decorator","duration":0.10891699999996263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should handle both id and class decorators","status":"passed","title":"should handle both id and class decorators","duration":0.29525000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should merge class decorator with :class string attribute","status":"passed","title":"should merge class decorator with :class string attribute","duration":0.11662499999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should merge class decorator with :class vector attribute","status":"passed","title":"should merge class decorator with :class vector attribute","duration":0.09624999999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should give :id attribute precedence over id decorator","status":"passed","title":"should give :id attribute precedence over id decorator","duration":0.1249159999999847,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should handle complex precedence","status":"passed","title":"should handle complex precedence","duration":0.1183330000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Hiccup tag decorators"],"fullName":"Hiccup tag decorators should default to div for class-only decorator","status":"passed","title":"should default to div for class-only decorator","duration":0.08866700000004357,"failureMessages":[],"meta":{}}],"startTime":1760708441719,"endTime":1760708441727.2952,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/basic_components.test.mjs"},{"assertionResults":[{"ancestorTitles":["Boolean Attribute Handling"],"fullName":"Boolean Attribute Handling should handle boolean attributes (disabled, checked) correctly","status":"passed","title":"should handle boolean attributes (disabled, checked) correctly","duration":6.43179200000003,"failureMessages":[],"meta":{}}],"startTime":1760708441717,"endTime":1760708441723.432,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/boolean_attributes.test.mjs"},{"assertionResults":[{"ancestorTitles":["Checkbox Component"],"fullName":"Checkbox Component should update on change and be controllable","status":"passed","title":"should update on change and be controllable","duration":6.634165999999993,"failureMessages":[],"meta":{}}],"startTime":1760708441719,"endTime":1760708441725.6343,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/checkbox.test.mjs"},{"assertionResults":[{"ancestorTitles":["Click Swap with nil atom"],"fullName":"Click Swap with nil atom should update nil atom correctly","status":"passed","title":"should update nil atom correctly","duration":4.679624999999987,"failureMessages":[],"meta":{}}],"startTime":1760708442031,"endTime":1760708442035.6797,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/click_swap.test.mjs"},{"assertionResults":[{"ancestorTitles":["Component switching bug"],"fullName":"Component switching bug should not duplicate nodes when switching back from a component with a global ratom","status":"passed","title":"should not duplicate nodes when switching back from a component with a global ratom","duration":133.26295800000003,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441569.263,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/component_switching_bug.test.mjs"},{"assertionResults":[{"ancestorTitles":["Fragment Root Component"],"fullName":"Fragment Root Component should re-render correctly when a child is removed","status":"passed","title":"should re-render correctly when a child is removed","duration":3.6095420000000047,"failureMessages":[],"meta":{}}],"startTime":1760708442067,"endTime":1760708442070.6096,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/empty_fragment.test.mjs"},{"assertionResults":[{"ancestorTitles":["Enter to submit"],"fullName":"Enter to submit should submit text on Enter key","status":"passed","title":"should submit text on Enter key","duration":7.290624999999977,"failureMessages":[],"meta":{}}],"startTime":1760708441831,"endTime":1760708441838.2905,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/enter_to_submit.test.mjs"},{"assertionResults":[{"ancestorTitles":["Clickable Fragment"],"fullName":"Clickable Fragment should convert slots to coins on click","status":"passed","title":"should convert slots to coins on click","duration":18.089584000000002,"failureMessages":[],"meta":{}}],"startTime":1760708441437,"endTime":1760708441455.0896,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/fragment_clickable.test.mjs"},{"assertionResults":[{"ancestorTitles":["Fragment Switching Bug"],"fullName":"Fragment Switching Bug should remove fragment content when switching away","status":"passed","title":"should remove fragment content when switching away","duration":5.568708000000015,"failureMessages":[],"meta":{}}],"startTime":1760708442014,"endTime":1760708442019.5686,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/fragment_switching.test.mjs"},{"assertionResults":[{"ancestorTitles":["List Demo"],"fullName":"List Demo should add and remove items from the list","status":"passed","title":"should add and remove items from the list","duration":13.284875,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441449.285,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/list_demo.test.mjs"},{"assertionResults":[{"ancestorTitles":["List re-rendering"],"fullName":"List re-rendering should maintain independent state for items in a for-loop","status":"passed","title":"should maintain independent state for items in a for-loop","duration":6.307374999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["List re-rendering"],"fullName":"List re-rendering should correctly re-render when an item is removed","status":"passed","title":"should correctly re-render when an item is removed","duration":3.350999999999999,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441445.351,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/list_rerender.test.mjs"},{"assertionResults":[{"ancestorTitles":["Component re-render on local state change"],"fullName":"Component re-render on local state change should update component when its local state changes","status":"passed","title":"should update component when its local state changes","duration":5.306292000000013,"failureMessages":[],"meta":{}}],"startTime":1760708441718,"endTime":1760708441723.3064,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/local_state_rerender.test.mjs"},{"assertionResults":[{"ancestorTitles":["Multiple component instances"],"fullName":"Multiple component instances should have independent state with positional keys","status":"passed","title":"should have independent state with positional keys","duration":5.568541000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Multiple component instances"],"fullName":"Multiple component instances should have independent state with explicit keys","status":"passed","title":"should have independent state with explicit keys","duration":2.4883749999999623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Multiple component instances"],"fullName":"Multiple component instances should maintain state when components are reordered with keys","status":"passed","title":"should maintain state when components are reordered with keys","duration":2.7574579999999855,"failureMessages":[],"meta":{}}],"startTime":1760708441438,"endTime":1760708441448.7576,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/multiple_instances.test.mjs"},{"assertionResults":[{"ancestorTitles":["Multiple Select Component"],"fullName":"Multiple Select Component should update on change and be controllable","status":"passed","title":"should update on change and be controllable","duration":6.944333,"failureMessages":[],"meta":{}}],"startTime":1760708441711,"endTime":1760708441717.9443,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/multiple_select.test.mjs"},{"assertionResults":[{"ancestorTitles":["For loops"],"fullName":"For loops should render a row of spans","status":"passed","title":"should render a row of spans","duration":4.038375000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["For loops"],"fullName":"For loops should render another row of spans","status":"passed","title":"should render another row of spans","duration":1.2723330000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["For loops"],"fullName":"For loops should render nested fors correctly","status":"passed","title":"should render nested fors correctly","duration":3.4574159999999665,"failureMessages":[],"meta":{}}],"startTime":1760708441717,"endTime":1760708441725.4575,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/nested_fors.test.mjs"},{"assertionResults":[{"ancestorTitles":["Numeric Input Component"],"fullName":"Numeric Input Component should update on input and be controllable","status":"passed","title":"should update on input and be controllable","duration":6.063375000000008,"failureMessages":[],"meta":{}}],"startTime":1760708442005,"endTime":1760708442011.0635,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/numeric_input.test.mjs"},{"assertionResults":[{"ancestorTitles":["Component re-render on prop change"],"fullName":"Component re-render on prop change should update child component when props change","status":"passed","title":"should update child component when props change","duration":5.571541999999965,"failureMessages":[],"meta":{}}],"startTime":1760708442046,"endTime":1760708442051.5715,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/prop_change_rerender.test.mjs"},{"assertionResults":[{"ancestorTitles":["Radio Button Component"],"fullName":"Radio Button Component should update on change and be controllable","status":"passed","title":"should update on change and be controllable","duration":8.465666999999996,"failureMessages":[],"meta":{}}],"startTime":1760708441717,"endTime":1760708441725.4656,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/radio_buttons.test.mjs"},{"assertionResults":[{"ancestorTitles":["Range Slider Component"],"fullName":"Range Slider Component should update on input and be controllable","status":"passed","title":"should update on input and be controllable","duration":5.848375000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Range Slider Component"],"fullName":"Range Slider Component should be controllable and then update on input","status":"passed","title":"should be controllable and then update on input","duration":2.567375000000027,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441444.5674,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/range_slider.test.mjs"},{"assertionResults":[{"ancestorTitles":["Deferred ratom initialization"],"fullName":"Deferred ratom initialization should only initialize local ratom once when parent re-renders","status":"passed","title":"should only initialize local ratom once when parent re-renders","duration":4.298207999999988,"failureMessages":[],"meta":{}}],"startTime":1760708442057,"endTime":1760708442061.298,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/ratom_deferred.test.mjs"},{"assertionResults":[{"ancestorTitles":["Re-entrant rendering"],"fullName":"Re-entrant rendering should keep child local state when multiple roots render interleaved","status":"passed","title":"should keep child local state when multiple roots render interleaved","duration":10.523083000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Re-entrant rendering"],"fullName":"Re-entrant rendering should preserve state when roots trigger cross renders via shared atoms","status":"passed","title":"should preserve state when roots trigger cross renders via shared atoms","duration":5.414375000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Re-entrant rendering"],"fullName":"Re-entrant rendering should keep other roots intact when one root is unmounted and remounted","status":"passed","title":"should keep other roots intact when one root is unmounted and remounted","duration":1.7837089999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Re-entrant rendering"],"fullName":"Re-entrant rendering should handle heavy watcher traffic without disturbing local state","status":"passed","title":"should handle heavy watcher traffic without disturbing local state","duration":2.371791999999971,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441456.3718,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/reentrant_render.test.mjs"},{"assertionResults":[{"ancestorTitles":["Ref attribute"],"fullName":"Ref attribute should be called with element on mount and nil on unmount","status":"passed","title":"should be called with element on mount and nil on unmount","duration":4.95070800000002,"failureMessages":[],"meta":{}}],"startTime":1760708442039,"endTime":1760708442043.9507,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/ref.test.mjs"},{"assertionResults":[{"ancestorTitles":["Select Component"],"fullName":"Select Component should update on change and be controllable","status":"passed","title":"should update on change and be controllable","duration":8.623208999999974,"failureMessages":[],"meta":{}}],"startTime":1760708441793,"endTime":1760708441801.6233,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/select.test.mjs"},{"assertionResults":[{"ancestorTitles":["Selected Attribute Handling"],"fullName":"Selected Attribute Handling should handle selected attribute correctly","status":"passed","title":"should handle selected attribute correctly","duration":10.33195900000004,"failureMessages":[],"meta":{}}],"startTime":1760708441811,"endTime":1760708441821.332,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/select_attribute.test.mjs"},{"assertionResults":[{"ancestorTitles":["Shared state across multiple roots"],"fullName":"Shared state across multiple roots keeps both roots in sync when rendering same component twice","status":"passed","title":"keeps both roots in sync when rendering same component twice","duration":6.705250000000007,"failureMessages":[],"meta":{}}],"startTime":1760708441717,"endTime":1760708441723.7053,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/shared_state_multiple_roots.test.mjs"},{"assertionResults":[{"ancestorTitles":["Simple Component"],"fullName":"Simple Component should render correctly","status":"passed","title":"should render correctly","duration":3.7000830000000065,"failureMessages":[],"meta":{}}],"startTime":1760708442037,"endTime":1760708442040.7002,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/simple_component.test.mjs"},{"assertionResults":[{"ancestorTitles":["Snake demo"],"fullName":"Snake demo should show Game Over when the snake hits the wall","status":"passed","title":"should show Game Over when the snake hits the wall","duration":358.763667,"failureMessages":[],"meta":{}}],"startTime":1760708441437,"endTime":1760708441795.7637,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/snake_game_over.test.mjs"},{"assertionResults":[{"ancestorTitles":["Standard Attribute Handling"],"fullName":"Standard Attribute Handling should handle class attribute with nil/null values correctly","status":"passed","title":"should handle class attribute with nil/null values correctly","duration":5.776333000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Standard Attribute Handling"],"fullName":"Standard Attribute Handling should handle title attribute with nil/null values correctly","status":"passed","title":"should handle title attribute with nil/null values correctly","duration":2.6022089999999594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Standard Attribute Handling"],"fullName":"Standard Attribute Handling should handle data attributes with nil/null values correctly","status":"passed","title":"should handle data attributes with nil/null values correctly","duration":2.6747910000000275,"failureMessages":[],"meta":{}}],"startTime":1760708441438,"endTime":1760708441448.6748,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/standard_attributes.test.mjs"},{"assertionResults":[{"ancestorTitles":["Stateful Component"],"fullName":"Stateful Component should update when ratom changes","status":"passed","title":"should update when ratom changes","duration":5.662334000000044,"failureMessages":[],"meta":{}}],"startTime":1760708441438,"endTime":1760708441443.6624,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/stateful_component.test.mjs"},{"assertionResults":[{"ancestorTitles":["Style Attribute Handling"],"fullName":"Style Attribute Handling should handle style attributes with nil/null values correctly","status":"passed","title":"should handle style attributes with nil/null values correctly","duration":5.942000000000007,"failureMessages":[],"meta":{}}],"startTime":1760708442020,"endTime":1760708442025.942,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/style_attribute.test.mjs"},{"assertionResults":[{"ancestorTitles":["SVG Component"],"fullName":"SVG Component should render SVG correctly","status":"passed","title":"should render SVG correctly","duration":4.15187499999999,"failureMessages":[],"meta":{}}],"startTime":1760708442051,"endTime":1760708442055.1519,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/svg.test.mjs"},{"assertionResults":[{"ancestorTitles":["Text Input Component"],"fullName":"Text Input Component should update text as user types","status":"passed","title":"should update text as user types","duration":6.086375000000032,"failureMessages":[],"meta":{}}],"startTime":1760708442015,"endTime":1760708442021.0864,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/text_input.test.mjs"},{"assertionResults":[{"ancestorTitles":["Textarea Component"],"fullName":"Textarea Component should update text as user types","status":"passed","title":"should update text as user types","duration":5.069000000000017,"failureMessages":[],"meta":{}}],"startTime":1760708441736,"endTime":1760708441741.069,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/textarea.test.mjs"},{"assertionResults":[{"ancestorTitles":["Timer Component"],"fullName":"Timer Component should start and stop timer correctly","status":"passed","title":"should start and stop timer correctly","duration":658.6405,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708442094.6404,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/timer.test.mjs"},{"assertionResults":[{"ancestorTitles":["Timers and Restart buttons"],"fullName":"Timers and Restart buttons should keep exactly one Restart button while switching tabs","status":"passed","title":"should keep exactly one Restart button while switching tabs","duration":82.89662499999997,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441518.8967,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/timers_and_buttons.test.mjs"},{"assertionResults":[{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should render initial state correctly","status":"passed","title":"should render initial state correctly","duration":8.261874999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should add a new todo","status":"passed","title":"should add a new todo","duration":19.760167000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should toggle a todo","status":"passed","title":"should toggle a todo","duration":16.42199999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should delete a todo","status":"passed","title":"should delete a todo","duration":22.321000000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should edit a todo","status":"passed","title":"should edit a todo","duration":31.416917000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should cancel editing on Escape","status":"passed","title":"should cancel editing on Escape","duration":33.22891600000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should save on blur","status":"passed","title":"should save on blur","duration":58.65266600000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should complete all todos","status":"passed","title":"should complete all todos","duration":69.248875,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should filter todos","status":"passed","title":"should filter todos","duration":32.47412499999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["TodoMVC Component"],"fullName":"TodoMVC Component should clear completed todos","status":"passed","title":"should clear completed todos","duration":61.13625000000002,"failureMessages":[],"meta":{}}],"startTime":1760708441442,"endTime":1760708441795.1362,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/todomvc.test.mjs"},{"assertionResults":[{"ancestorTitles":["on-blur event"],"fullName":"on-blur event should trigger when element loses focus","status":"passed","title":"should trigger when element loses focus","duration":3.12175000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["on-double-click event"],"fullName":"on-double-click event should trigger on double click","status":"passed","title":"should trigger on double click","duration":0.7927080000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["on-key-down event"],"fullName":"on-key-down event should trigger on key press","status":"passed","title":"should trigger on key press","duration":0.6644579999999678,"failureMessages":[],"meta":{}}],"startTime":1760708442023,"endTime":1760708442027.6646,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/various_events.test.mjs"},{"assertionResults":[{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should not render nil, true, or false","status":"passed","title":"should not render nil, true, or false","duration":2.4450410000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should render numbers as text","status":"passed","title":"should render numbers as text","duration":0.4179579999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should merge adjacent strings","status":"passed","title":"should merge adjacent strings","duration":0.3323750000000132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should merge adjacent strings and numbers","status":"passed","title":"should merge adjacent strings and numbers","duration":0.42837499999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.3382499999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["Various value rendering"],"fullName":"Various value rendering should handle a complex mix of values","status":"passed","title":"should handle a complex mix of values","duration":0.30349999999998545,"failureMessages":[],"meta":{}}],"startTime":1760708441436,"endTime":1760708441440.3035,"status":"passed","message":"","name":"/Users/borkdude/dev/eucalypt/src/test/src/various_renderings.test.mjs"}]}